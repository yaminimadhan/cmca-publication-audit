-- CMCA Publication Audit — COMPLETE SQLite Schema
-- Matches CMCA authors to PDF authors BY NAME (not by ID) using a helper table and views.

-- In database: cmca_audit
CREATE TABLE IF NOT EXISTS public.users (
  user_id       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  username      TEXT    NOT NULL UNIQUE,
  password_hash TEXT    NOT NULL,
  user_type     TEXT    NOT NULL CHECK (user_type IN ('admin','general_user')),
  created_at    TIMESTAMPTZ NOT NULL DEFAULT now()
);

CREATE TABLE IF NOT EXISTS public.projects (
  project_id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  project_name TEXT    NOT NULL UNIQUE,
  created_by   BIGINT  NOT NULL REFERENCES public.users(user_id) ON DELETE RESTRICT,
  created_at   TIMESTAMPTZ NOT NULL DEFAULT now()
);

CREATE TABLE IF NOT EXISTS public.pdfs (
  pdf_id            BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  title             TEXT,
  authors           TEXT,          
  affiliation       TEXT,
  doi               TEXT UNIQUE,
  instruments_json  JSONB,         
  num_pages         INTEGER,
  publish_date      TIMESTAMPTZ,   
  uploaded_by       BIGINT REFERENCES public.users(user_id)     ON DELETE SET NULL,
  project_id        BIGINT REFERENCES public.projects(project_id) ON DELETE SET NULL,
  upload_date       TIMESTAMPTZ NOT NULL DEFAULT now(),    
  cosine_similarity DOUBLE PRECISION,
  cmca_result       TEXT CHECK (cmca_result IN ('Yes','No'))
);

CREATE INDEX IF NOT EXISTS ix_pdfs_project_id  ON public.pdfs (project_id);
CREATE INDEX IF NOT EXISTS ix_pdfs_uploaded_by ON public.pdfs (uploaded_by);
CREATE INDEX IF NOT EXISTS ix_pdfs_doi         ON public.pdfs (doi);

ALTER TABLE public.pdfs
ADD COLUMN IF NOT EXISTS storage_path TEXT;

CREATE TABLE sentence_embeddings (
    id SERIAL PRIMARY KEY,
    sentence TEXT NOT NULL,
    embedding VECTOR(768)
);

-- =========================================================
-- 4) instruments
-- =========================================================
CREATE TABLE IF NOT EXISTS instruments (
  instrument_id   INTEGER PRIMARY KEY AUTOINCREMENT,
  instrument_name TEXT NOT NULL UNIQUE
);

-- =========================================================
-- 5) cmca_authors  (author master list)
-- =========================================================
CREATE TABLE IF NOT EXISTS cmca_authors (
  cmca_author_id INTEGER PRIMARY KEY AUTOINCREMENT,
  full_name      TEXT NOT NULL,   -- e.g., "John Smith"
  email          TEXT UNIQUE
);

CREATE INDEX IF NOT EXISTS idx_cmca_authors_name ON cmca_authors(full_name COLLATE NOCASE);

-- =========================================================
-- 6) gold_standards
-- =========================================================
CREATE TABLE IF NOT EXISTS gold_standards (
  gold_id         INTEGER PRIMARY KEY AUTOINCREMENT,
  instrument_name TEXT NOT NULL,
  vendor          TEXT,
  model           TEXT,
  instrument_code TEXT,
  platform        TEXT
);

-- =========================================================
-- Helper table for NAME-BASED matching (per-paper author rows)
-- =========================================================
CREATE TABLE IF NOT EXISTS pdf_authors (
  pdf_id       INTEGER NOT NULL,              -- -> pdfs.pdf_id
  author_name  TEXT    NOT NULL,              -- e.g., "John Smith"
  author_order INTEGER,                       -- optional: 1,2,3...
  PRIMARY KEY (pdf_id, author_name),
  FOREIGN KEY (pdf_id) REFERENCES pdfs(pdf_id) ON DELETE CASCADE
);

CREATE INDEX IF NOT EXISTS idx_pdf_authors_name ON pdf_authors(author_name COLLATE NOCASE);

-- =========================================================
-- Views for NAME-BASED CMCA author matching
-- Normalization removes punctuation/dashes and lowercases both sides.
-- =========================================================

-- Matches between pdf_authors and cmca_authors by normalized name
CREATE VIEW IF NOT EXISTS v_pdf_cmca_matches AS
SELECT
  p.pdf_id,
  p.title,
  pa.author_name       AS pdf_author_name,
  ca.cmca_author_id,
  ca.full_name         AS cmca_full_name,
  ca.email
FROM pdf_authors pa
JOIN pdfs p  ON p.pdf_id = pa.pdf_id
JOIN cmca_authors ca
  ON lower(
       replace(replace(replace(replace(replace(pa.author_name,'.',''),'-',''),'–',''),',',''),'  ',' ')
     ) =
     lower(
       replace(replace(replace(replace(replace(ca.full_name,'.',''),'-',''),'–',''),',',''),'  ',' ')
     );

-- Per-PDF flag if any CMCA author matched by name
CREATE VIEW IF NOT EXISTS v_pdf_has_cmca_author AS
SELECT
  p.pdf_id,
  p.title,
  CASE
    WHEN EXISTS (SELECT 1 FROM v_pdf_cmca_matches m WHERE m.pdf_id = p.pdf_id)
    THEN 'Yes' ELSE 'No'
  END AS has_cmca_author
FROM pdfs p;
